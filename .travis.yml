language: python

os:
  - linux
  - osx

rvm: 2.0
sudo: required

env:
  global:
    - OMP_NUM_THREADS=4
    - CMAKE_BUILD_TYPE=Debug
    - VERBOSE_MAKEFILE=yes
    - PARALLEL_TEST_JOBS=2
    - DEVEL_PACKAGES="cmake cmake-data libblas-dev liblapack-dev"

addons:
  apt:
    update: true
    sources:
      - ubuntu-toolchain-r-test

jobs:
  include:
    - stage: linter
      script:
        - bundle install
        - pip install proselint
        - bundle exec danger
        - env packages="indent" ./install_packages.sh
        - env BML_OPENMP=no VERBOSE_MAKEFILE=yes ./build.sh check_indent
    - stage: docs
      script:
        - env packages="${DEVEL_PACKAGES} gcc-8 g++-8 gfortran-8 doxygen texlive" ./install_packages.sh
        - env CC=gcc-8 CXX=g++-8 FC=gfortran-8 GCOV=gcov-8 BML_OPENMP=no VERBOSE_MAKEFILE=yes ./build.sh docs
    - stage: test-simple
      script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-4.7 g++-4.7 gfortran-4.7" ./install_packages.sh
        - env CC=gcc-4.7 CXX=g++-4.7 FC=gfortran-4.7 GCOV=gcov-4.7 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
    - stage: test-full
      script:
        - env packages="${DEVEL_PACKAGES} valgrind gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=no BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=no BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=yes BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=no BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=no BML_INTERNAL_BLAS=yes ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=no ./build.sh testing
    - script:
        - env packages="${DEVEL_PACKAGES} gcc-6 g++-6 gfortran-6" ./install_packages.sh
        - env CC=gcc-6 CXX=g++-6 FC=gfortran-6 GCOV=gcov-6 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
    - stage: coverage
      script:
        - pip install cpp-coveralls codecov
        - env packages="${DEVEL_PACKAGES} gcc-8 g++-8 gfortran-8" ./install_packages.sh
        - env CC=gcc-8 CXX=g++-8 FC=gfortran-8 GCOV=gcov-8 BUILD_SHARED_LIBS=yes BML_OPENMP=yes BML_INTERNAL_BLAS=yes ./build.sh testing
      after_success:
        - codecov --gcov-exec ${GCOV}
        - coveralls
